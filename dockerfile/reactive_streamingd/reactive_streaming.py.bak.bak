import time
import paho.mqtt.client as mqtt #pip install paho-mqtt
import json
import requests
from influxdb_client import InfluxDBClient, Point, WritePrecision
from influxdb_client.client.write_api import SYNCHRONOUS
import influxdb_client

def on_connect(client, userdata, flags, rc):
    if rc == 0:
            print("Connected to MQTT Broker!")
    else:
            print("Failed to connect, return code %d\n", rc)

def on_message(client,userdata,msg):
    try:
        data=str(msg.payload.decode("utf-8"))
        print(msg.topic+" : "+data)
    except Exception as e:
        print(str(e))
    #formatage_donnee(data)



def formatage_donnee(data):

    data_formater=data

    envoie_BDD(data_formater)

def envoie_BDD(data_formater):



    return 0

def main():

    client_id="12"
    #172.31.82.22
    broker="172.31.82.22"
    port_broker=1883
    topic="conso_elec"
    #CONNECT LOOP
    client=mqtt.Client()
    client.on_connect = on_connect
    client.connect(broker, port_broker)
    print("Client connected")
    client.subscribe(topic)
    client.on_message=on_message
    while 1:
        try:
            client.loop_forever()
        except Exception as e:
            time.sleep(0.2)
            print(str(e))



if __name__ == "__main__":
    main()
