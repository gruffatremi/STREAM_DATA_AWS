---
# tasks file for roles/swarm
- name: check/init swarm
  docker_swarm:
    state: present
    advertise_addr: eth0:2377
  register: __output_swarm
  when: inventory_hostname in groups['managers'][0]

- name: install nodes
  docker_swarm:
    state: join
    timeout: 60
    advertise_addr: enp0s8:2377
    join_token: "{{ hostvars[groups['managers'][0]]['__output_swarm']['swarm_facts']['JoinTokens']['Manager'] }}"
    remote_addrs: "{{ groups['managers'][0] }}"
  when: inventory_hostname in groups['managers'] and inventory_hostname not in groups['managers'][0]

- name: install worker
  docker_swarm:
    state: join
    timeout: 60
    advertise_addr: enp0s8:2377
    join_token: "{{ hostvars[groups['managers'][0]]['__output_swarm']['swarm_facts']['JoinTokens']['Worker'] }}"
    remote_addrs: "{{ groups['managers'][0] }}"
  when: inventory_hostname in groups['workers']

- name: Ensure NFS is installed.
  package: "name={{ nfs_package }} state=present"

- name: Ensure mount directory exists.
  file:
    path: "{{ efs_mount_dir }}"
    state: directory
    mode: 0755

- name: Get current AZ from AWS.
  uri:
    url: http://169.254.169.254/latest/meta-data/placement/availability-zone
    return_content: yes
  register: aws_current_az

- name: Ensure EFS volume is mounted.
  mount:
    name: "{{ efs_mount_dir }}"
    src: "{{ aws_current_az.content }}.{{ efs_file_system_id }}.efs.{{ aws_region }}.amazonaws.com:/"
    fstype: nfs4
    opts: nfsvers=4.1
    state: mounted

# Print the contents of the mount to the log.
- command: "ls -lah {{ efs_mount_dir }}"
  register: efs_contents
- debug: var=efs_contents
